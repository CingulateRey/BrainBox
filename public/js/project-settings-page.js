!function(I){var n={};function g(c){if(n[c])return n[c].exports;var C=n[c]={i:c,l:!1,exports:{}};return I[c].call(C.exports,C,C.exports,g),C.l=!0,C.exports}g.m=I,g.c=n,g.d=function(I,n,c){g.o(I,n)||Object.defineProperty(I,n,{enumerable:!0,get:c})},g.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},g.t=function(I,n){if(1&n&&(I=g(I)),8&n)return I;if(4&n&&"object"==typeof I&&I&&I.__esModule)return I;var c=Object.create(null);if(g.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:I}),2&n&&"string"!=typeof I)for(var C in I)g.d(c,C,function(n){return I[n]}.bind(null,C));return c},g.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(n,"a",n),n},g.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},g.p="",g(g.s=8)}({8:function(module,exports){eval('//TODO  check and be sure the user picks a username from the dropdown menu\n//TODO  implement the placeholder for the select tags in the anotation table\n//TODO  find a way for the user to give a set of values for the annotations and make it obvious that it works this way\n\n// Add avatar based on project\'s name\njdenticon.update($("svg")[0],md5(projectShortname));\n\n// WS Autocompletion\nvar cb, label;\nvar host = "ws://" + window.location.hostname + ":8080/";\nif (window.WebSocket) {\n    ws=new WebSocket(host);\n} else if (window.MozWebSocket) {\n    ws=new MozWebSocket(host);\n}\nws.onopen = function(msg) {\n    ws.send(JSON.stringify({"type":"autocompleteClient"}));\n}\nws.onmessage = function(message) {\n    message = JSON.parse(message.data);\n    if (message.type === "userNameQuery") {\n        var arr;\n        if(label=="nickname")\n            arr=$.map(message.metadata,function(o){return {label:o.nickname,nickname:o.nickname,name:o.name}});\n        if(label=="name")\n            arr=$.map(message.metadata,function(o){return {label:o.name,nickname:o.nickname,name:o.name}});\n        cb(arr);\n    }\n}\n\nvar projectInfoProxy={};\n\nbind2(projectInfoProxy,projectInfo,"url","#projDescription #url");\nbind2(projectInfoProxy,projectInfo,"description","#projDescription #description");\nbind2(projectInfoProxy,projectInfo,"name","#projectName");\n\nvar accParam = {\n    table: $("table#access"),\n    info_proxy: projectInfoProxy,\n    info: projectInfo,\n    trTemplate: $.map([\n        "<tr>",\n        "    <td contentEditable=true class=\'noEmpty autocomplete\' data-autocomplete=\'user.nickname\'></td>",\n        "    <td contentEditable=true class=\'noEmpty autocomplete\' data-autocomplete=\'user.name\'></td>",\n        "    <td>",\n        "        <div class=\'access\' data-level=2>",\n        "            <span class=\'view\' title=\'view collaborators\'></span>",\n        "            <span class=\'edit\' title=\'edit collaborators\'></span>",\n        "            <span class=\'add\' title=\'add collaborators\'></span>",\n        "            <span class=\'remove\' title=\'remove collaborators\'></span>",\n        "        </div>",\n        "    </td>",\n        "    <td>",\n        "        <div class=\'access\' data-level=2>",\n        "            <span class=\'view\' title=\'view annotations\'></span>",\n        "            <span class=\'edit\' title=\'edit annotations\'></span>",\n        "            <span class=\'add\' title=\'add annotations\'></span>",\n        "            <span class=\'remove\' title=\'remove annotations\'></span>",\n        "        </div>",\n        "    </td>",\n        "    <td>",\n        "        <div class=\'access\' data-level=2>",\n        "            <span class=\'view\' title=\'view MRI files\'></span>",\n        "            <span class=\'edit\' title=\'edit MRI files\' ></span>",\n        "            <span class=\'add\' title=\'add MRI files\'></span>",\n        "            <span class=\'remove\' title=\'remove MRI files\'></span>",\n        "        </div>",\n        "    </td>",\n        "</tr>"],function(o){return o}).join(""),\n    objTemplate: [\n        {\ttypeOfBinding:2,\n            path:"collaborators.list.#.username" // nickname\n        },\n        {\ttypeOfBinding:2,\n            path:"collaborators.list.#.name" // full name\n        },\n        {\ttypeOfBinding:2,\n            path:"collaborators.list.#.access.collaborators",\n            format: function(e,d){$(e).find(".access").attr(\'data-level\',["none","view","edit","add","remove"].indexOf(d))},\n            parse: function(e){var level=$(e).find(".access").attr("data-level");return ["none","view","edit","add","remove"][level]}\n        },\n        {\ttypeOfBinding:2,\n            path:"collaborators.list.#.access.annotations",\n            format: function(e,d){$(e).find(".access").attr(\'data-level\',["none","view","edit","add","remove"].indexOf(d))},\n            parse: function(e){var level=$(e).find(".access").attr("data-level");return ["none","view","edit","add","remove"][level]}\n        },\n        {\ttypeOfBinding:2,\n            path:"collaborators.list.#.access.files",\n            format: function(e,d){$(e).find(".access").attr(\'data-level\',["none","view","edit","add","remove"].indexOf(d))},\n            parse: function(e){var level=$(e).find(".access").attr("data-level");return ["none","view","edit","add","remove"][level]}\n        }\n    ]\n};\nfor(var i=0;i<projectInfo.collaborators.list.length;i++) {\n    BrainBox.appendAnnotationTableRow(i,accParam);\n}\n\nvar annParam;\nBrainBox.loadLabelsets()\n.then(function () {\n    annParam = {\n        table: $("table#annotations"),\n        info_proxy: projectInfoProxy,\n        info: projectInfo,\n        trTemplate: $.map([\n            "<tr>",\n            " <td contentEditable=true class=\'noEmpty\'></td>",\n            " <td><select class=\'mui-select\'>",BrainBox.annotationType.map(function(o){return "<option>"+o+"</option>"}),"</select></td>",\t// append annotation types\n            " <td contentEditable=true class=\'noEmpty\'>",\n            "  <select class=\'mui-select\'>",BrainBox.labelSets.map(function(o){return "<option>"+o.name+"</option>"}),"</select>",\n            " </td>",\t// append label sets\n            " <td>","<div class=\'display\' data-check=0></div>","</td>",\n//            " <td>","<div class=\'display\' data-check=0>","<span class=\'check\' title=\'display\'></span>","</div>","</td>",\n            "</tr>"],function(o){return o}).join(""),\n        objTemplate: [\n            {\ttypeOfBinding:2,\n                path:"annotations.list.#.name"\n            },\n            {\ttypeOfBinding:2,\n                path:"annotations.list.#.type",\n                format: function(e,d){$(e).find("select").prop(\'selectedIndex\',BrainBox.annotationType.indexOf(d))},\n                parse: function(e){return $(e).find("select").val()}\n            },\n            {\ttypeOfBinding:2,\n                path:"annotations.list.#.values",\n                format: function (e,d) {\n                    var t=$(e).closest("tr").find("td:eq(1) select").prop(\'selectedIndex\');\n                    if(t==0)\n                        $(e).find("select").prop(\'selectedIndex\',BrainBox.labelSets.map(function(o){return o.source}).indexOf(d));\n                    else\n                        $(e).html(d)\n                },\n                parse: function(e) {\n                    var t=$(e).closest("tr").find("td:eq(1) select").prop(\'selectedIndex\');\n                    if(t==0)\n                        return BrainBox.labelSets[$(e).find("select").prop(\'selectedIndex\')].source;\n                    else\n                        return $(e).text();\n                }\n            },\n            {\ttypeOfBinding:2,\n                path:"annotations.list.#.display",\n                format: function(e,d){$(e).find(".display").attr("data-check",(d==\'true\')?"1":"0")},\n                parse: function(e){return ($(e).find(".display").attr("data-check")=="1"?\'true\':\'false\')}\n            }\n        ]\n    };\n    var i;\n    for(i=0;i<projectInfo.annotations.list.length;i++) {\n        BrainBox.appendAnnotationTableRow(i,annParam);\n    }\n    \n    // Each project requires at least 1 volume-type annotation\n    // Add a default one if there is none.\n    var volAnnFound = false;\n    for(i=0;i<projectInfo.annotations.list.length;i++) {\n        if(projectInfo.annotations.list[i].type == "volume") {\n            volAnnFound = true;\n            break;\n        }\n    }\n    if(volAnnFound == false) {\n        addAnnotation(annParam);\n    }\n});\n\nvar filesParam = {\n    table: $("table#MRIFiles"),\n    info_proxy: projectInfoProxy,\n    info: projectInfo,\n    trTemplate: $.map([\n        "<tr>",\n        "    <td contentEditable=true class=\'noEmpty\'></td>",\n        "    <td contentEditable=true class=\'noEmpty\'></td>",\n        "</tr>"],function(o){return o}).join(""),\n    objTemplate: [\n        {\ttypeOfBinding:2,\n            path:"files.list.#.source"\n        },\n        {\ttypeOfBinding:2,\n            path:"files.list.#.name"\n        }\n    ]\n};\n\nvar cursorFiles = 0;\nqueryFiles();\n\nfunction queryFiles() {\n    $.get("/project/json/"+projectInfo.shortname+"/files", {start:cursorFiles,length:100,name:true})\n    .then(function(list) {\n        if(list.length) {\n            appendFiles(list);\n            cursorFiles += 100;\n            queryFiles();\n        }\n    });\n}\nfunction appendFiles(list) {\n    projectInfo.files.list.push.apply(projectInfo.files.list, list);\n    for(var i=0;i<list.length;i++) {\n        BrainBox.appendAnnotationTableRow(cursorFiles + i, filesParam);\n    }\n    $("#numFiles").text(projectInfo.files.list.length);\n}\n\n\n$("#projDescription #numFiles").text(projectInfo.files.list.length);\n$("#projDescription #numAnnotations").text(projectInfo.annotations.list.length);\n$("#projDescription #numCollaborators").text(projectInfo.collaborators.list.length);\n\n// for the access widget\n$("body").on(\'click\',".view",function(e){onAccessClicked(e,0)});\n$("body").on(\'click\',".edit",function(e){onAccessClicked(e,1)});\n$("body").on(\'click\',".add",function(e){onAccessClicked(e,2)});\n$("body").on(\'click\',".remove",function(e){onAccessClicked(e,3)});\n$("#access tbody").on(\'click\',\'tr\',function(e){selectRow(e);disableDeleteOnAnyoneUser(e);});\n\n$("#annotations tbody").on(\'click\',\'tr\',selectRow);\n$("#MRIFiles tbody").on(\'click\',\'tr\',selectRow);\n\n$("#saveChanges").click(saveChanges);\n$("#deleteProject").click(deleteProject);\n$("#goToProject").click(function goToProject(){location.pathname=`/project/${projectShortname}`});\n\n$("body").on(\'click\',".display",function(e){onCheckClicked(e)}); // for the display option\n\n$(document).on(\'click\', "#addCollaborator", function(){addCollaborator(accParam)});\n$(document).on(\'click\', "#removeCollaborator", function(){removeCollaborator(accParam)});\n$("table#access tr").removeClass("selected");\n$("table#access tbody tr").eq(0).addClass("selected");\n$("table#access tbody tr:eq(0) td").removeAttr("contentEditable");\n$("#removeCollaborator").addClass("disabled");\n\n$(document).on(\'click\', "#addAnnotation", function(){addAnnotation(annParam)});\n$(document).on(\'click\', "#removeAnnotation", function(){removeAnnotation(annParam)});\n$("table#annotations tr").removeClass("selected");\n$("table#annotations tbody tr").eq(0).addClass("selected");\n\n$(document).on(\'click\', "#addFile", function(){addFile(filesParam)});\n$(document).on(\'click\', "#removeFile", function(){removeFile(filesParam)});\n$(document).on(\'click\', "#importFiles", function(){importFiles()});\n$("table#MRIFiles tr").removeClass("selected");\n$("table#MRIFiles tbody tr").eq(0).addClass("selected");\n\n$("#importFilesDialogOk").click(importFilesDialog);\n$("#importFilesDialogCancel").click(function() {\n    $("#importFilesDialog").hide();\n});\n$("#addProject").click(function(){location="/project/new"});\n\n// listen to type of annotation changes\n$("#annotations tbody").on(\'change\', "td:nth-child(2) select", function(e) {\n    var irow=$(e.target).closest("tr").index();\n    var t=$(e.target).prop(\'selectedIndex\');\n    if(t==0) {\n        var arr= [\n            "<select>",\n            BrainBox.labelSets.map(function(o){return "<option>"+o.name+"</option>"}),\n            "</select>"\n        ];\n        var str=$.map(arr,function(o){return o}).join("");\n        $("#annotations tbody  tr:eq("+irow+") td:eq(2)").html(str);\n    } else {\n        $("#annotations tbody  tr:eq("+irow+") td:eq(2)").html("");\n    }\n});\n\n/**\n * @function onAccessClicked\n * @desc Handles click on one of the 5 access levels: 0=none, 1=view, 2=edit, 3=add, 4=remove\n * @param {Event} e Event triggered by the click\n * @param {int} l Base level of the access icon clicked\n */\nfunction onAccessClicked( e, l ) {\n    // access level \n    var al = $( e.target ).closest( "div" ).attr( "data-level" );\n    $( e.target ).closest( "div" ).attr( "data-level",l+( al != (l+1) ) );\n}\n\n/** \n * @function onCheckClicked\n * @desc Handles click on \'display\' option for annotations in the project settings; 0=do not display; 1=display\n * @param {Event} e Event triggered by click\n */\nfunction onCheckClicked( e, l ) {\n    // checkbox toggle for \'display\' option\n    var checkbox = ($( e.target ).closest("div").attr( "data-check" ) === "1");\n    if( checkbox == false ) {\n        $( e.target ).closest("div").attr( "data-check", "1" );\n    }\n    else {\n        $( e.target ).closest("div").attr( "data-check", "0" );\n    }\n}\n\nfunction selectRow(e) {\n    $(e.currentTarget).closest("tbody").find("tr").each(function(index, tag) {\n        $(tag).removeClass("selected");\n    })\n    $(e.currentTarget).addClass("selected");\n}\nfunction disableDeleteOnAnyoneUser(e) {\n    var curTable = $(e.currentTarget).closest("table").attr("id");\n\n    // check if the selected row belongs to the #access table\n    if(curTable === "access") {\n        // check if the selected user is \'anyone\'\n        var rowIndex = $(e.currentTarget).closest("tbody").find("tr.selected").index();\n        if(projectInfo.collaborators.list[rowIndex].userID === \'anyone\') {\n            // if yes, disable the \'remove\' button\n            $("#removeCollaborator").addClass(\'disabled\');\n        } else {\n            $("#removeCollaborator").removeClass(\'disabled\');\n        }\n    }\n}\n\nfunction importFilesDialog() {\n    var sum=0;\n    $("#importFilesDialog tbody tr").each(function(i,o) {\n        var url=$(o).find("td:eq(0)").text();\n        var name=$(o).find("td:eq(1)").text();\n        var i,found;\n        \n        if(url.length<10)\n            return;\n        \n        // update the projectInfo object by calling the proxy\'s getters\n        JSON.stringify(projectInfoProxy);\n        \n        // look if the MRI file is not already in the list\n        found=false;\n        for(i in projectInfo.files.list) {\n            if(projectInfo.files.list[i].source==url) {\n                if(projectInfo.files.list[i].name=="")\n                    projectInfoProxy["files.list."+i+".name"]=name;\n                found=true;\n                break;\n            }\n        }\n        if(found===false) {\n            projectInfo.files.list.push({source:url, name:name});\n\n            // add and bind new table row\n            var i=projectInfo.files.list.length-1;\n            BrainBox.appendAnnotationTableRow(i,filesParam);\n\n            $("#projDescription #numFiles").text(projectInfo.files.list.length);\n            \n            sum++;\n        }\n    });\n    $("#importFilesDialog").hide();\n    console.log(sum,"files added");\n}\nfunction addCollaborator(param) {\n    projectInfo.collaborators.list.push({\n        userID: "",\n        access: {\n            collaborators:"view",\n            annotations:"view",\n            files:"view"\n        }\n    });\n\n    // add and bind new table row\n    var i=projectInfo.collaborators.list.length-1;\n    BrainBox.appendAnnotationTableRow(i,param);\n    \n    /** @todo Fix: This is adding the autocompletion listener again and again to previously\n     *        added collaborators\n     */\n    // configure autocompletion\n    $(".autocomplete").autocomplete({\n        minLength: 0,\n        source: function(req,res) {\n            var key = $(this.element).attr(\'data-autocomplete\');\n            switch(key) {\n                case "user.nickname":\n                    ws.send(JSON.stringify({"type":"userNameQuery", "metadata":{"nickname":req.term}}));\n                    label="nickname";\n                    break;\n                case "user.name":\n                    ws.send(JSON.stringify({"type":"userNameQuery", "metadata":{"name":req.term}}));\n                    label="name";\n                    break;\n            }\n            cb=res;\n        },\n        select:function(e,ui) {\n            var irow=$(e.target).closest(\'tr\').index();\n            projectInfoProxy["collaborators.list."+irow+".name"]=ui.item.name;\n            projectInfoProxy["collaborators.list."+irow+".userID"]=ui.item.nickname;\n\n            // add user to access objects\n            projectInfo.collaborators.list[irow].userID=ui.item.nickname;\n        }\n    });\n\n    // update number of collaborators counter\n    $("#projDescription #numCollaborators").text(projectInfo.collaborators.list.length);\n}\nfunction removeCollaborator(param) {\n    // remove row from table\n    var index=$(param.table).find("tbody .selected").index();\n    $(param.table).find(\'tbody tr:eq(\'+index+\')\').remove();\n    \n    // remove binding\n    JSON.stringify(param.info_proxy); // update projectInfo from projectInfoProxy\n    var irow=projectInfo.collaborators.list.length-1;\n    for(var icol=0; icol<param.objTemplate.length; icol++) {\n        unbind2(param.info_proxy,param.objTemplate[icol].path.replace("#", irow));\n    }\n    \n    // remove row from BrainBox.info.mri.atlas\n    projectInfo.collaborators.list.splice(index,1);\n\n    $("#projDescription #numCollaborators").text(projectInfo.collaborators.list.length);\n}\nfunction addAnnotation(param) {\n    projectInfo.annotations.list.push({\n        type:"volume",\n        values:BrainBox.labelSets[0].source,\n        display:"true"\n    });\n\n    // add and bind new table row\n    var i=projectInfo.annotations.list.length-1;\n    BrainBox.appendAnnotationTableRow(i,param);\n\n    $("#projDescription #numAnnotations").text(projectInfo.annotations.list.length);\n}\nfunction removeAnnotation(param) {\n    // remove row from table\n    var index=$(param.table).find("tbody .selected").index();\n    $(param.table).find(\'tbody tr:eq(\'+index+\')\').remove();\n    \n    // remove binding\n    JSON.stringify(param.info_proxy); // update projectInfo from projectInfoProxy\n    var irow=projectInfo.annotations.list.length-1;\n    for(var icol=0; icol<param.objTemplate.length; icol++) {\n        unbind2(param.info_proxy,param.objTemplate[icol].path.replace("#", irow));\n    }\n    \n    // remove row from BrainBox.info.mri.atlas\n    projectInfo.annotations.list.splice(index,1);\n\n    $("#projDescription #numAnnotations").text(projectInfo.annotations.list.length);\n}\nfunction addFile(param) {\n    projectInfo.files.list.push({});\n\n    // add and bind new table row\n    var i=projectInfo.files.list.length-1;\n    BrainBox.appendAnnotationTableRow(i,param);\n\n    $("#projDescription #numFiles").text(projectInfo.files.list.length);\n}\nfunction removeFile(param) {\n    // remove row from table\n    var index=$(param.table).find("tbody .selected").index();\n    $(param.table).find(\'tbody tr:eq(\'+index+\')\').remove();\n    \n    // remove binding\n    JSON.stringify(param.info_proxy); // update projectInfo from projectInfoProxy\n    var irow=projectInfo.files.list.length-1;\n    for(var icol=0; icol<param.objTemplate.length; icol++) {\n        unbind2(param.info_proxy,param.objTemplate[icol].path.replace("#", irow));\n    }\n    \n    // remove row from BrainBox.info.mri.atlas\n    projectInfo.files.list.splice(index,1);\n\n    $("#projDescription #numFiles").text(projectInfo.files.list.length);\n    \n    // select the closest remaining column\n    $(param.table).find(\'tbody tr:eq(\'+(Math.min(index,projectInfo.files.list.length-1))+\')\').addClass(\'selected\');\n}\nfunction importFiles() {\n    // var input=document.getElementById("i-open-mesh");\n    console.log("importing files...");\n    $("body").append("<input id=\'importFilesInput\' style=\'display:none\'>");\n    var input=$("#importFilesInput")[0];\n    console.log(input);\n    input.type="file";\n    input.onchange=function(e){\n        var file=this.files[0];\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            $("#importFilesInput").remove();\n            $("#importFilesDialog").show();\n            var result=e.target.result;\n            var lines=result.split("\\n");\n            var html=[];           \n            for(i in lines) {\n                cols=lines[i].split(/[ ]*,[ ]*/);\n                html.push("<tr><td contentEditable=\'true\'>"+cols[0]+"</td><td>"+cols[1]+"</td></tr>");\n            }\n            $("#importFilesDialog tbody").append(html.join("\\n"));\n        }\n        reader.readAsText(file);\n    }\n    input.click();\n}\nfunction saveChanges() {\n    // update projectInfo from projectInfoProxy\n    JSON.stringify(projectInfoProxy);\n\n    $.post("/project/json/"+projectInfo.shortname, {\n            data:JSON.stringify(projectInfo)\n    }).done(function(a, b) {\n        if(a.success) {\n            $("#saveFeedback").text("Successfully saved");\n            setTimeout(function() {\n                $("#saveFeedback").text("");\n            },2000);\n        } else {\n            $("#saveFeedback").text("Unable to save. Please try again later");\n            setTimeout(function() {\n                $("#saveFeedback").text("");\n            },3000);\n        }\n    }).catch(function(err) {\n        $("#saveFeedback").text("Unable to save. Please try again later ("+JSON.stringify(err.responseJSON.message)+")");\n        setTimeout(function() {\n            $("#saveFeedback").text("");\n        },3000);\n        console.log(err);\n    });\n}\nfunction deleteProject() {\n    // update projectInfo from projectInfoProxy\n    JSON.stringify(projectInfoProxy);\n\n    var res = confirm(\n        "Are you sure you want to delete project "\n        + projectInfo.shortname+"? "\n        + "This operation cannot be undone."\n    );\n    \n    if (res !== true) {\n        return;\n    }\n    \n    $.ajax({\n        url: "/project/json/"+projectInfo.shortname,\n        method: "delete",\n        data:JSON.stringify(projectInfo)\n    }).done(function(response) {\n        if(response.success) {\n            $("#saveFeedback").text("Successfully deleted");\n            setTimeout(function() {\n                $("#saveFeedback").text("");\n                location="/";\n            },2000);\n        } else {\n            $("#saveFeedback").text("Unable to delete ("+response.message+")");\n            setTimeout(function() {\n                $("#saveFeedback").text("");\n            },3000);\n        }\n        console.log(response.message);\n    }).catch(function(err) {\n        $("#saveFeedback").text("Unable to delete. Please try again later ("+JSON.stringify(err.responseJSON.error.error)+")");\n        setTimeout(function() {\n            $("#saveFeedback").text("");\n        },3000);\n        console.log(err);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')}});