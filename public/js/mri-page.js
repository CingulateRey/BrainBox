!function(I){var n={};function g(t){if(n[t])return n[t].exports;var C=n[t]={i:t,l:!1,exports:{}};return I[t].call(C.exports,C,C.exports,g),C.l=!0,C.exports}g.m=I,g.c=n,g.d=function(I,n,t){g.o(I,n)||Object.defineProperty(I,n,{enumerable:!0,get:t})},g.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},g.t=function(I,n){if(1&n&&(I=g(I)),8&n)return I;if(4&n&&"object"==typeof I&&I&&I.__esModule)return I;var t=Object.create(null);if(g.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:I}),2&n&&"string"!=typeof I)for(var C in I)g.d(t,C,function(n){return I[n]}.bind(null,C));return t},g.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(n,"a",n),n},g.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},g.p="",g(g.s=5)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return freeform; });\n/**\n * @function freeform\n * @desc Basic handling of text annotations\n */\nfunction freeform(annotation, path, username) {\n    let tr; // the object that will go into the table\n    let obj; // the object that will go into the database\n\n    // configure table row\n    tr = \"<td contentEditable=true class='noEmpty'></td>\";\n\n    // configure database object\n    obj = {\n        typeOfBinding:2,\n        path: path,\n        format: function(e, d) {\n            if(typeof d.data === 'undefined') {\n                e.get(0).innerHTML = \"\";\n            } else {\n                e.get(0).innerHTML = '<span>'+d.data+'</span>';\n            }\n        },\n        parse: function(e, d) {\n            const obj = d;\n            obj.modified = (new Date()).toJSON();\n            obj.modifiedBy = username;\n            obj.data = e.get(0).textContent;\n            return obj;\n        }\n    };\n\n    return {tr, obj};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3L2JyYWluYm94L3NyYy90b29scy9mcmVlZm9ybS5qcz81MzgzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmLFdBQVc7QUFDWCxZQUFZOztBQUVaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVk7QUFDWiIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZnVuY3Rpb24gZnJlZWZvcm1cbiAqIEBkZXNjIEJhc2ljIGhhbmRsaW5nIG9mIHRleHQgYW5ub3RhdGlvbnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZnJlZWZvcm0oYW5ub3RhdGlvbiwgcGF0aCwgdXNlcm5hbWUpIHtcbiAgICBsZXQgdHI7IC8vIHRoZSBvYmplY3QgdGhhdCB3aWxsIGdvIGludG8gdGhlIHRhYmxlXG4gICAgbGV0IG9iajsgLy8gdGhlIG9iamVjdCB0aGF0IHdpbGwgZ28gaW50byB0aGUgZGF0YWJhc2VcblxuICAgIC8vIGNvbmZpZ3VyZSB0YWJsZSByb3dcbiAgICB0ciA9IFwiPHRkIGNvbnRlbnRFZGl0YWJsZT10cnVlIGNsYXNzPSdub0VtcHR5Jz48L3RkPlwiO1xuXG4gICAgLy8gY29uZmlndXJlIGRhdGFiYXNlIG9iamVjdFxuICAgIG9iaiA9IHtcbiAgICAgICAgdHlwZU9mQmluZGluZzoyLFxuICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICBmb3JtYXQ6IGZ1bmN0aW9uKGUsIGQpIHtcbiAgICAgICAgICAgIGlmKHR5cGVvZiBkLmRhdGEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgZS5nZXQoMCkuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZS5nZXQoMCkuaW5uZXJIVE1MID0gJzxzcGFuPicrZC5kYXRhKyc8L3NwYW4+JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2U6IGZ1bmN0aW9uKGUsIGQpIHtcbiAgICAgICAgICAgIGNvbnN0IG9iaiA9IGQ7XG4gICAgICAgICAgICBvYmoubW9kaWZpZWQgPSAobmV3IERhdGUoKSkudG9KU09OKCk7XG4gICAgICAgICAgICBvYmoubW9kaWZpZWRCeSA9IHVzZXJuYW1lO1xuICAgICAgICAgICAgb2JqLmRhdGEgPSBlLmdldCgwKS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIHt0ciwgb2JqfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return hidden; });\n/**\n * @function hidden\n * @desc Handles hidden text annotations\n */\nfunction hidden(annotation, path, username) {\n    let tr; // the object that will go into the table\n    let obj; // the object that will go into the database\n\n    // configure table row\n    tr = \"<td contentEditable=true class='hidden'></td>\";\n\n    // configure database object\n    obj = {\n        typeOfBinding:2,\n        path: path,\n        format: function(e, d) {\n            if(typeof d.data === 'undefined') {\n                e.get(0).innerHTML = \"\";\n            } else {\n                e.get(0).innerHTML = '<span>'+d.data+'</span>';\n            }\n        },\n        parse: function(e, d) {\n            const obj = d;\n            obj.modified = (new Date()).toJSON();\n            obj.modifiedBy = username;\n            obj.data = e.get(0).textContent;\n            return obj;\n        }\n    };\n\n    return {tr, obj};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3L2JyYWluYm94L3NyYy90b29scy9oaWRkZW4uanM/NzVmOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZixXQUFXO0FBQ1gsWUFBWTs7QUFFWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZO0FBQ1oiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZ1bmN0aW9uIGhpZGRlblxuICogQGRlc2MgSGFuZGxlcyBoaWRkZW4gdGV4dCBhbm5vdGF0aW9uc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoaWRkZW4oYW5ub3RhdGlvbiwgcGF0aCwgdXNlcm5hbWUpIHtcbiAgICBsZXQgdHI7IC8vIHRoZSBvYmplY3QgdGhhdCB3aWxsIGdvIGludG8gdGhlIHRhYmxlXG4gICAgbGV0IG9iajsgLy8gdGhlIG9iamVjdCB0aGF0IHdpbGwgZ28gaW50byB0aGUgZGF0YWJhc2VcblxuICAgIC8vIGNvbmZpZ3VyZSB0YWJsZSByb3dcbiAgICB0ciA9IFwiPHRkIGNvbnRlbnRFZGl0YWJsZT10cnVlIGNsYXNzPSdoaWRkZW4nPjwvdGQ+XCI7XG5cbiAgICAvLyBjb25maWd1cmUgZGF0YWJhc2Ugb2JqZWN0XG4gICAgb2JqID0ge1xuICAgICAgICB0eXBlT2ZCaW5kaW5nOjIsXG4gICAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAgIGZvcm1hdDogZnVuY3Rpb24oZSwgZCkge1xuICAgICAgICAgICAgaWYodHlwZW9mIGQuZGF0YSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBlLmdldCgwKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBlLmdldCgwKS5pbm5lckhUTUwgPSAnPHNwYW4+JytkLmRhdGErJzwvc3Bhbj4nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwYXJzZTogZnVuY3Rpb24oZSwgZCkge1xuICAgICAgICAgICAgY29uc3Qgb2JqID0gZDtcbiAgICAgICAgICAgIG9iai5tb2RpZmllZCA9IChuZXcgRGF0ZSgpKS50b0pTT04oKTtcbiAgICAgICAgICAgIG9iai5tb2RpZmllZEJ5ID0gdXNlcm5hbWU7XG4gICAgICAgICAgICBvYmouZGF0YSA9IGUuZ2V0KDApLnRleHRDb250ZW50O1xuICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4ge3RyLCBvYmp9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return multiple; });\n/**\n * @function multiple\n * @desc Handles annotations restricted to a reduced number of options\n */\n\nfunction multiple(annotation, path, username) {\n    let tr = []; // the object that will go into the table\n    let obj; // the object that will go into the database\n    const values = annotation.values.split(/[, ]+/);\n\n    // configure table row\n    tr.push("<td><select value=0><option value=\'\' disabled selected hidden>Empty</option>");\n    for (var o in values) {\n        tr.push("<option value=\\"" + values[o] + "\\"" + ">" + values[o] + "</option>");\n    }\n    tr.push("</select></td>");\n    tr = tr.join("\\n");\n\n    // configure database object\n    obj = {\n        typeOfBinding:2,\n        path: path,\n        format: function(e, d) {\n            var obj = d;\n            if (typeof obj.data !== \'undefined\') {\n                /**\n                 * @todo Replace color assignment by the addition of a class\n                 */\n                e.get(0).querySelectorAll("select")[0].style.color = "#fff"; \n                e.get(0).querySelectorAll("select")[0].value = obj.data; \n            } else {\n                e.get(0).querySelectorAll("select")[0].value = ""; \n            }\n        },\n        parse: function(e, d) {\n            if (e.get(0).querySelectorAll("select")[0].value) {\n                e.get(0).querySelectorAll("select")[0].style.color = "#fff";\n            }\n            const obj = d;\n            obj.modified = (new Date()).toJSON();\n            obj.modifiedBy = username;\n            obj.data = e.get(0).querySelectorAll("select")[0].value;\n            return obj;\n        }\n    };\n\n    return {tr, obj};\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3L2JyYWluYm94L3NyYy90b29scy9tdWx0aXBsZS5qcz9hYWUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZixnQkFBZ0I7QUFDaEIsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEU7QUFDQSx3RTtBQUNBLGFBQWE7QUFDYixrRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWTtBQUNaIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmdW5jdGlvbiBtdWx0aXBsZVxuICogQGRlc2MgSGFuZGxlcyBhbm5vdGF0aW9ucyByZXN0cmljdGVkIHRvIGEgcmVkdWNlZCBudW1iZXIgb2Ygb3B0aW9uc1xuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG11bHRpcGxlKGFubm90YXRpb24sIHBhdGgsIHVzZXJuYW1lKSB7XG4gICAgbGV0IHRyID0gW107IC8vIHRoZSBvYmplY3QgdGhhdCB3aWxsIGdvIGludG8gdGhlIHRhYmxlXG4gICAgbGV0IG9iajsgLy8gdGhlIG9iamVjdCB0aGF0IHdpbGwgZ28gaW50byB0aGUgZGF0YWJhc2VcbiAgICBjb25zdCB2YWx1ZXMgPSBhbm5vdGF0aW9uLnZhbHVlcy5zcGxpdCgvWywgXSsvKTtcblxuICAgIC8vIGNvbmZpZ3VyZSB0YWJsZSByb3dcbiAgICB0ci5wdXNoKFwiPHRkPjxzZWxlY3QgdmFsdWU9MD48b3B0aW9uIHZhbHVlPScnIGRpc2FibGVkIHNlbGVjdGVkIGhpZGRlbj5FbXB0eTwvb3B0aW9uPlwiKTtcbiAgICBmb3IgKHZhciBvIGluIHZhbHVlcykge1xuICAgICAgICB0ci5wdXNoKFwiPG9wdGlvbiB2YWx1ZT1cXFwiXCIgKyB2YWx1ZXNbb10gKyBcIlxcXCJcIiArIFwiPlwiICsgdmFsdWVzW29dICsgXCI8L29wdGlvbj5cIik7XG4gICAgfVxuICAgIHRyLnB1c2goXCI8L3NlbGVjdD48L3RkPlwiKTtcbiAgICB0ciA9IHRyLmpvaW4oXCJcXG5cIik7XG5cbiAgICAvLyBjb25maWd1cmUgZGF0YWJhc2Ugb2JqZWN0XG4gICAgb2JqID0ge1xuICAgICAgICB0eXBlT2ZCaW5kaW5nOjIsXG4gICAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAgIGZvcm1hdDogZnVuY3Rpb24oZSwgZCkge1xuICAgICAgICAgICAgdmFyIG9iaiA9IGQ7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9iai5kYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIEB0b2RvIFJlcGxhY2UgY29sb3IgYXNzaWdubWVudCBieSB0aGUgYWRkaXRpb24gb2YgYSBjbGFzc1xuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGUuZ2V0KDApLnF1ZXJ5U2VsZWN0b3JBbGwoXCJzZWxlY3RcIilbMF0uc3R5bGUuY29sb3IgPSBcIiNmZmZcIjsgXG4gICAgICAgICAgICAgICAgZS5nZXQoMCkucXVlcnlTZWxlY3RvckFsbChcInNlbGVjdFwiKVswXS52YWx1ZSA9IG9iai5kYXRhOyBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZS5nZXQoMCkucXVlcnlTZWxlY3RvckFsbChcInNlbGVjdFwiKVswXS52YWx1ZSA9IFwiXCI7IFxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwYXJzZTogZnVuY3Rpb24oZSwgZCkge1xuICAgICAgICAgICAgaWYgKGUuZ2V0KDApLnF1ZXJ5U2VsZWN0b3JBbGwoXCJzZWxlY3RcIilbMF0udmFsdWUpIHtcbiAgICAgICAgICAgICAgICBlLmdldCgwKS5xdWVyeVNlbGVjdG9yQWxsKFwic2VsZWN0XCIpWzBdLnN0eWxlLmNvbG9yID0gXCIjZmZmXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvYmogPSBkO1xuICAgICAgICAgICAgb2JqLm1vZGlmaWVkID0gKG5ldyBEYXRlKCkpLnRvSlNPTigpO1xuICAgICAgICAgICAgb2JqLm1vZGlmaWVkQnkgPSB1c2VybmFtZTtcbiAgICAgICAgICAgIG9iai5kYXRhID0gZS5nZXQoMCkucXVlcnlTZWxlY3RvckFsbChcInNlbGVjdFwiKVswXS52YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIHt0ciwgb2JqfTtcbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tools_freeform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var _tools_hidden_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var _tools_multiple_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n\n\n\n\nvar mriInfoOrig;\nvar textAnnotationsArray = [];\nvar version=1;\nvar volAnnParam, textAnnParam;\n\n// Prevent zoom on double tap\n$(\'body\').on(\'touchstart\', function preventZoom(e) {\n    var t2 = e.timeStamp,\n        t1 = $(this).data(\'lastTouch\') || t2,\n        dt = t2 - t1,\n        fingers = e.originalEvent.touches.length;\n    $(this).data(\'lastTouch\', t2);\n    if (!dt || dt > 500 || fingers > 1) return; // not double-tap\n    e.preventDefault(); // double tap - prevent the zoom\n    // also synthesize click events we just swallowed up\n    $(this).trigger(\'click\').trigger(\'click\');\n});\n\nif( $.isEmptyObject(mriInfo)) {\n    $("#stereotaxic").prepend("<h2>ERROR: Cannot read the data.</h2><p>The file is maybe corrupt?</p>");\n    console.log("ERROR: Cannot read data. The file is maybe corrupt?");\n\n    $("#annotationsPane").hide();\n    $("#data").show();\n\n} else {\n    params.info=mriInfo;\n\n    var fullscreen=false;\n    if(params.fullscreen)\n        params.fullscreen=(params.fullscreen=="true");\n\n    $("#loadingIndicator").show();\n\n    // Load data\n    BrainBox.initBrainBox()\n    .then(function () { console.log("BrainBox initialised"); return BrainBox.loadLabelsets(); })\n    .then(function () { console.log("Label sets loaded"); return BrainBox.configureBrainBox(params); })\n    .then(function () {\n        console.log("BrainBox configured");\n        // backup the original MRI info\n        mriInfoOrig = JSON.parse(JSON.stringify(BrainBox.info));\n         \n        // Serialise text annotations object (text annotations are stored as objects in the\n        // database, but used as an array here)\n        if(mriInfo.mri && mriInfo.mri.annotations) {\n            textAnnotationsArray = BrainBox.annotationsObjectToArray(mriInfo.mri.annotations);\n        }\n\n    // Bind general information\n    //--------------------------\n        bind2(info_proxy,BrainBox.info,"name",$("#name"));\n        bind1(info_proxy,BrainBox.info,"source",$("#source"));\n        bind1(info_proxy,BrainBox.info,"included",$("#included"),date_format);\n\n\n    // Bind volume-type annotations\n    //------------------------------\n        volAnnParam = {\n            table: $("table#annotations"),\n            info_proxy: info_proxy,\n            info: BrainBox.info,\n            trTemplate: $.map([\n                "<tr>",\n                " <td contentEditable=true class=\'noEmpty\'></td>", // name\n                " <td><select>",$.map(BrainBox.labelSets,function(o){return "<option>"+o.name+"</option>"}),"</select></td>",\t// value\n                " <td class=\'noEmpty\'></td>", // project\n                " <td></td>", // modified\n                " <td>", // access\n                "  <div class=\'access\'>",\n                "   <span class=\'view\' title=\'view annotations\'></span>",\n                "   <span class=\'edit\' title=\'edit annotations\'></span>",\n                "   <span class=\'add\' title=\'add annotations\'></span>",\n                "   <span class=\'remove\' title=\'remove annotations\'></span>",\n                "  </div>",\n                " </td>",\n                "</tr>"],function(o){return o}).join(""),\n            objTemplate: [\n                {   typeOfBinding:2,\n                    path:"mri.atlas.#.name" // name\n                },\n                {   typeOfBinding:2,\n                    path:"mri.atlas.#.labels", //value\n                    format: function(e,d){$(e).find("select").prop(\'selectedIndex\',$.map(BrainBox.labelSets,function(o){return o.source}).indexOf(d))},\n                    parse: function(e){var name=$(e).find("select").val(),i=$.map(BrainBox.labelSets,function(o){return o.name}).indexOf(name);return BrainBox.labelSets[i].source}\n                },\n                {   typeOfBinding:1, // project\n                    path:"mri.atlas.#.project",\n                    format: function(e,d){$(e).html(\'<a href="/project/\'+d+\'">\'+d+\'</a>\')}\n                },\n                {   typeOfBinding:1,\n                    path:"mri.atlas.#.modified",\n                    format: date_format\n                },\n                {   typeOfBinding:1,\n                    path:"mri.atlas.#.access",\n                    format: function(e,d){$(e).find(".access").attr(\'data-level\',["none","view","edit","add","remove"].indexOf(d))},\n                    parse: function(e){var level=$(e).find(".access").attr("data-level");return ["none","view","edit","add","remove"][level]}\n                }\n            ]\n        };\n        for(var i=0;i<BrainBox.info.mri.atlas.length;i++) {\n            BrainBox.appendAnnotationTableRow(i,volAnnParam);\n        }\n        // connect pop-down menus\n        $(document).on(\'change\', "table#annotations select", function(){\n            var col=$("table#annotations tr:eq(0) th:eq("+$(this).closest(\'td\')[0].cellIndex+")").text();\n            var index=$(this).closest(\'tr\')[0].rowIndex-1;\n            switch(col) {\n                case "Value":\n                    var url="/labels/" + info_proxy["mri.atlas."+index+".labels"];\n                    $.getJSON(url,function(json) {\n                        AtlasMakerWidget.configureOntology(json);\n                        AtlasMakerWidget.changePenColor(0);\n                        AtlasMakerWidget.brain_img.img=null; // to force redraw with new colors\n                        AtlasMakerWidget.drawImages();\n                        $("#loadingIndicator").hide();\n                    });\n                    break;\n            }\n        });\n        // volume annotation table: select row\n        $(document).on(\'click touchstart\', "#annotations tr",function(){BrainBox.selectAnnotationTableRow($(this).index(),volAnnParam)});\n        // volume annotations table: add, remove and save annotations\n        $(document).on(\'click touchstart\', "#addAnnotation", function(){addAnnotation(volAnnParam)});\n        $(document).on(\'click touchstart\', "#removeAnnotation", function(){removeAnnotation(volAnnParam)});\n        // volume annotations table: select the first row by default\n        $("table#annotations tr").removeClass("selected");\n        $("table#annotations tr").eq(1).addClass("selected");\n\n    // Bind text annotations\n    //-----------------------\n        var trTemplate;\n        var objTemplate;\n        var i, j, p, n;\n        trTemplate = [\n            "<tr>",\n            " <td contentEditable=true class=\'noEmpty\'></td>", // name\n            " <td contentEditable=true class=\'noEmpty\'></td>", // value\n            " <td class=\'noEmpty\'></td>", // project\n            " <td></td>", // modified\n            " <td>", // access\n            "  <div class=\'access\'>",\n            "   <span class=\'view\' title=\'view annotations\'></span>",\n            "   <span class=\'edit\' title=\'edit annotations\'></span>",\n            "   <span class=\'add\' title=\'add annotations\'></span>",\n            "   <span class=\'remove\' title=\'remove annotations\'></span>",\n            "  </div>",\n            " </td>",\n            "</tr>"\n        ].join("");\n        objTemplate = [\n            {   typeOfBinding:2,\n                path:"#.name", // name\n            },\n            {   typeOfBinding:2,\n                path:"#.data" // data\n            },\n            {   typeOfBinding:1,\n                path:"#.project", // project\n                format: function(e,d){$(e).html(\'<a href="/project/\'+d+\'">\'+d+\'</a>\')}\n            },\n            {   typeOfBinding:1,\n                path:"#.modified", // modified\n                format: date_format\n            },\n            {   typeOfBinding:1,\n                path:"#.access",\n                format: function(e,d){$(e).find(".access").attr(\'data-level\',BrainBox.accessLevels.indexOf(d))},\n                parse: function(e){var level=$(e).find(".access").attr("data-level");return BrainBox.accessLevels[level]}\n            }\n        ];\n        textAnnParam = {\n            table: $("table#textAnnotations"),\n            info_proxy: info_proxy,\n            info: textAnnotationsArray,\n            trTemplate: trTemplate,\n            objTemplate: objTemplate\n        };\n        for(i=0;i<textAnnotationsArray.length;i++) {\n            BrainBox.appendAnnotationTableRow(i,textAnnParam);\n        }\n        $(document).on(\'click touchstart\', "#textAnnotations tr",function() {\n            var table=$(this).closest("tbody");\n            $(table).find("tr").removeClass("selected");\n            $(this).addClass("selected");\n        });\n        $(document).on(\'click touchstart\', "#addTextAnnotation", function(){addTextAnnotation(textAnnParam)});\n        $(document).on(\'click touchstart\', "#removeTextAnnotation", function(){removeTextAnnotation(textAnnParam)});\n\n        // text annotations table: select the first row by default\n        $("table#textAnnotations tr").removeClass("selected");\n        $("table#textAnnotations tr").eq(1).addClass("selected");\n        \n        // connect close button in labels set\n        $(document).on(\'click touchstart\', "#labels-close", function(){$("#labelset").hide()});\n\n        $("#data").show();\n\n    // Listen to changes that trigger a metadata save\n    //------------------------------------------------\n        // send data when focus is lost (on blur)\n        $(document).on(\'blur\', "[contenteditable]", function from_project(e) {\n            saveAnnotationsChange(BrainBox.info);\n        });\n        // blur when [enter] is clicked, to trigger data sending\n        $(document).on(\'keydown\', "[contenteditable]", function(e) {\n            if(e.which==13 && $(e.target).attr(\'contenteditable\')) {\n                e.preventDefault();\n                $(e.target).blur();\n            }\n        });\n        // blur when <select> changes value to trigger data sending\n        $("#annotations tbody, #textAnnotations tbody").on(\'change\', "select", function(e) {\n            $(e.target).blur();\n            saveAnnotationsChange(BrainBox.info);\n        });\n\n    // WS Autocompletion\n    //-------------------\n        var cb, label;\n        AtlasMakerWidget.receiveFunctions["similarProjectNamesQuery"] = function(data) {\n            var arr = [];\n            if(label=="similarProjectNames")\n                arr=$.map(data.metadata,function(o){return {label:o.shortname,shortname:o.shortname,name:o.name}});\n            cb(arr);\n        };\n\n        $(".autocomplete").autocomplete({\n            minLength: 0,\n            source: function(req,res) {\n                var key = $(this.element).attr(\'data-autocomplete\');\n                switch(key) {\n                    case "user.similarProjectNames":\n                        AtlasMakerWidget.socket.send(JSON.stringify({"type":"similarProjectNamesQuery", "metadata":{"projectName":req.term}}));\n                        label="similarProjectNames";\n                        break;\n                }\n                cb=res;\n            },\n            select:function(e,ui) {\n                var irow=$(e.target).closest(\'tr\').index();\n                info_proxy["mri.atlas."+irow+".project"]=ui.item.name;\n\n                // add user to access objects\n                // projectInfo.collaborators.list[irow].userID=ui.item.nickname;\n            }\n        });\n\n\n    })\n    .catch(err => {\n        $("#msgLog").html("ERROR: Can\'t load data. " + err);\n        console.error(err);\n    });\n}\n\n$("#addProject").click(function(){location="/project/new"});\n\n/**\n * @function addAnnotation\n * @desc Add an empty volume annotation\n */\nfunction addAnnotation(param) {\n    var date=new Date();\n    var i, found;\n    \n    // check that there is no other empty annotation already created\n    found = false;\n    for(i=0;i<BrainBox.info.mri.atlas.length;i++) {\n        if(BrainBox.info.mri.atlas[i].name === "" && BrainBox.info.mri.atlas[i].project === "") {\n            found = true;\n            break;\n        }\n    }\n    if(found) {\n        $("#annotationMessage").text("An empty annotation already exists");\n        setTimeout(function(){$("#annotationMessage").text("")},2000);\n        return;\n    }\n    \n    // add data to annotations array\n    BrainBox.info.mri.atlas.push({\n        name:"",\n        project:"",\n        access: "edit", \n        created: date.toJSON(), \n        modified: date.toJSON(), \n        filename: Math.random().toString(36).slice(2)+".nii.gz",\t// automatically generated filename\n        labels: "foreground.json",\n        owner: AtlasMakerWidget.User.username,\n        type: "volume"\n    });\n\n    // add and bind new table row\n    var i=BrainBox.info.mri.atlas.length-1;\n    BrainBox.appendAnnotationTableRow(i,param);\n    \n    //select new annotation\n    BrainBox.selectAnnotationTableRow(i,param);\n\n    // update in server\n    saveAnnotationsChange(BrainBox.info);\n}\n\n/**\n * @function removeAnnotation\n */\nfunction removeAnnotation(param) {\n    // find row index\n    var index=$(param.table).find("tbody .selected").index();\n    \n    // prevent removal of a last projet-less annotation\n    if(BrainBox.info.mri.atlas[index].project == "") {\n        var nPublicAnnotations = BrainBox.info.mri.atlas.map(function(o){return (o.project=="")}).length;\n        if(nPublicAnnotations == 1) {\n            $("#annotationMessage").text("There has to be at least 1 public volume annotation");\n            setTimeout(function(){$("#annotationMessage").text("")},2000);\n            return;\n        }\n    }\n    \n    // remove row from table\n    $(param.table).find(\'tbody tr:eq(\'+index+\')\').remove();\n    \n    // select previous row (or 1st one)\n    BrainBox.selectAnnotationTableRow(Math.max(0,index-1),param);\n\n    // remove binding\n    JSON.stringify(param.info_proxy); // update BrainBox.info from info_proxy\n    var irow=BrainBox.info.mri.atlas.length-1;\n    for(var icol=0; icol<param.objTemplate.length; icol++) {\n        unbind2(param.info_proxy,param.objTemplate[icol].path.replace("#", irow));\n    }\n\n    // remove row from BrainBox.info.mri.atlas\n    BrainBox.info.mri.atlas.splice(index,1);\n\n    // update in server\n    saveAnnotationsChange(BrainBox.info);\n}\n/**\n * @function addTextAnnotation\n */\nfunction addTextAnnotation(param) {\n    var date=new Date();\n    var i;\n    \n    // check that there is no other empty annotation already created\n    if(BrainBox.info.mri.annotations[""] && BrainBox.info.mri.annotations[""][""]) {\n        $("#textAnnotationMessage").text("An empty annotation already exists");\n        setTimeout(function(){$("#textAnnotationMessage").text("")},2000);\n        return;\n    }\n\n    // add data to annotations array\n    textAnnotationsArray.push({\n        name:"",\n        project:"",\n        access: "edit", \n        created: date.toJSON(), \n        modified: date.toJSON(), \n        owner: AtlasMakerWidget.User.username,\n        type: "text",\n        data: ""\n    });\n    // add and bind new table row\n    var i=textAnnotationsArray.length-1;\n    BrainBox.appendAnnotationTableRow(i,param);\n\n    //select new annotation\n    selectTextAnnotationTableRow(i,param);\n\n    // save change\n    saveAnnotationsChange(BrainBox.info);\n}\n/**\n * @function removeTextAnnotation\n */\nfunction removeTextAnnotation(param) {\n    var index=$(param.table).find("tbody .selected").index();\n    $(param.table).find(\'tbody tr:eq(\'+index+\')\').remove();\n    // remove binding\n    JSON.stringify(param.info_proxy); // update textAnnotationsArray from info_proxy\n    var irow=textAnnotationsArray.length-1;\n    for(var icol=0; icol<param.objTemplate.length; icol++) {\n        unbind2(param.info_proxy,param.objTemplate[icol].path.replace("#", irow));\n    }\n    // remove row from textAnnotationsArray\n    textAnnotationsArray.splice(index,1);\n\n    // select previous row (or 1st one)\n    selectTextAnnotationTableRow(Math.max(0,index-1),param);\n\n    // save change\n    saveAnnotationsChange(BrainBox.info);\n}\nfunction selectTextAnnotationTableRow(index,param) {\n    var table=param.table;\n    var currentIndex=$(table).find("tr.selected").index();\n\n    if(index>=0 && currentIndex!=index) {\n        $(table).find("tr").removeClass("selected");\n        $(table).find(\'tbody tr:eq(\'+index+\')\').addClass("selected");\n    }\n}\n\n/**\n * @function saveAnnotationsChange\n */\nfunction saveAnnotationsChange(info) {\n    var i, j;\n\n    // update content of projectInfo object from proxy by calling all getters\n    JSON.stringify(info_proxy);\n\n    // check the info object for duplicate volume annotations\n    for(i=0;i<info.mri.atlas.length-1;i++) {\n        for(j=i+1;j<info.mri.atlas.length;j++) {\n            if( info.mri.atlas[i].name === info.mri.atlas[j].name\n                && info.mri.atlas[i].project === info.mri.atlas[j].project) {\n                $("#annotationMessage").text("There is already an annotation with that name and project");\n                setTimeout(function(){$("#annotationMessage").text("")},2000);\n                //$.extend(true, info.mri, mriInfoOrig.mri);\n                resetBindingProxy(volAnnParam, mriInfoOrig);\n                return;\n            }\n        }\n    }\n\n    // check the info object for duplicate text annotations\n    for(i=0;i<textAnnotationsArray.length-1;i++) {\n        for(j=i+1;j<textAnnotationsArray.length;j++) {\n            if( textAnnotationsArray[i].name === textAnnotationsArray[j].name\n                && textAnnotationsArray[i].project === textAnnotationsArray[j].project) {\n                $("#textAnnotationMessage").text("There is already an annotation with that name and project");\n                setTimeout(function(){$("#textAnnotationMessage").text("")},2000);\n                //$.extend(true, textAnnotationsArray, BrainBox.annotationsObjectToArray(mriInfoOrig.mri.annotations));\n                resetBindingProxy(textAnnParam, BrainBox.annotationsObjectToArray(mriInfoOrig.mri.annotations));\n                return;\n            }\n        }\n    }\n        \n    // convert the text annotations array into an object\n    info.mri.annotations = BrainBox.annotationsArrayToObject(textAnnotationsArray);\n    \n    // compute a diff patch between the new and old versions of the info object\n    var patch = jsonpatch.compare(mriInfoOrig, info);\n    if(patch.length == 0) {\n        console.log("Nothing changed");\n        return;\n    }\n    \n    // send the patch to the server and update the stored version\n    AtlasMakerWidget.sendSaveMetadataMessage(info,"patch",patch)\n    .then(function() {\n        mriInfoOrig = JSON.parse(JSON.stringify(info));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')}]);